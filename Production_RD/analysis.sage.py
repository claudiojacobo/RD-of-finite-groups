

# This file was *autogenerated* from the file analysis.sage
from sage.all_cmdline import *   # import sage library

import json

def get_data(file_name): 
    data = []
    # Turn the json file into a list of dictionaries
    with open(file_name) as f: #i think this also closes file...check. 
        for line in f:
            data.append(json.loads(line))
    min_bounds = {}
    for entry in data: 
        group = entry["group"]
        bound = entry["bound"]
        ch_index = entry["character_index"]
        invariants = entry["invariants"]
        if group not in min_bounds or bound < min_bounds[group]["bound"]:
                min_bounds[group] = {"bound": bound, "character_index": ch_index, "invariants": invariants}

    for group in min_bounds: 
        print(
            f"Group: {group} \n"
            f" Min bound: {min_bounds[group]['bound']} \n"
            f" Character index: {min_bounds[group]['character_index']} \n"
            f" Invariants: {min_bounds[group]['invariants']} \n\n"
        )
    qs = "x's are the same" 
    fours = "number of degree four invariants" 

# want to make a graph where x is q...we want to track how many invariants of size 4 on the y axis and have powers of each other be the same color. 
# want to have the y axis be the invariants and the size of the data to be the number of occurences and then have the color be the prime 
# how to color code it so that the primes of different powers have the same color...want to decide if color is based on how many different primes we go to, or if the primes are always the same color 

   

def main(): 
    file_name = "Carmen-data-dump.json"
    print(get_data(file_name))



if __name__ == "__main__":
        main() 

